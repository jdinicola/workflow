name: Deploy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      promote:
        required: true
        type: boolean

    outputs:
      deployed_version:
        value: ${{ jobs.deploy.outputs.deployed_version }}
      bundle_name:
        value: ${{ jobs.deploy.outputs.bundle_name }}
      deployment_url:
        value: ${{ vars.DEPLOYMENT_URL }}${{ inputs.environment == 'staging' && steps.deploy-service.outputs.deployed_version || '' }}

    secrets:
      deploy_token:
        required: true

jobs:
  deploy:
    name: ${{ inputs.environment }}
    runs-on: ubuntu-latest

    environment:
      name: ${{ inputs.environment }}
      url: ${{ vars.DEPLOYMENT_URL }}${{ inputs.environment == 'staging' && steps.deploy-service.outputs.deployed_version || '' }}

    outputs:
      bundle_name: ${{ steps.upload-bundle.outputs.bundle_name }}
      deployed_version: ${{ steps.deploy-service.outputs.deployed_version }}

    env:
      DEPLOY_TOKEN: ${{ secrets.deploy_token }}
      DEPLOY_API_URL: ${{ vars.DEPLOY_API_URL }}
      PAGEBUILDER_VERSION: ${{ vars.PAGEBUILDER_VERSION }}

    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      # - name: Dump github object
      #   run: echo "${{ toJson(github) }}"

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: bundle
          path: ./dist

      - name: Upload bundle
        id: upload-bundle
        run: |
          chmod +x ./scripts/deployment/upload.sh
          bash ./scripts/deployment/upload.sh

      - name: Terminate oldest service
        run: |
          chmod +x ./scripts/deployment/terminate.sh
          bash ./scripts/deployment/terminate.sh

      - name: Deploy new service
        id: deploy-service
        env:
          BUNDLE_NAME: ${{ steps.upload-bundle.outputs.bundle_name }}
        run: |
          chmod +x ./scripts/deployment/deploy.sh
          bash ./scripts/deployment/deploy.sh

      - name: Promote service
        if: ${{ inputs.promote == true }}
        env:
          DEPLOYED_VERSION: ${{ steps.deploy-service.outputs.deployed_version }}
        run: |
          chmod +x ./scripts/deployment/promote.sh
          bash ./scripts/deployment/promote.sh