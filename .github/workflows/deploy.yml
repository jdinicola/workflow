name: Deploy ARC bundle

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      promote:
        required: false
        type: boolean
        default: true

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    environment:
      name: ${{ inputs.environment }}
      url: ${{ vars.DEPLOYMENT_URL }}${{ inputs.environment == 'staging' && steps.deploy-service.outputs.deployed_version || '' }}

    outputs:
      deployed_version: ${{ steps.deploy-service.outputs.DEPLOYED_VERSION }}

    env:
      DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
      DEPLOY_API_URL: ${{ vars.DEPLOY_API_URL }}

    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: bundle
          path: ./dist

      - name: Upload bundle
        id: upload-bundle
        run: |
          chmod +x ${GITHUB_WORKSPACE}/scripts/deployment/upload.sh
          bash ${GITHUB_WORKSPACE}/scripts/deployment/upload.sh

      - name: Terminate oldest service
        run: |
          chmod +x ${GITHUB_WORKSPACE}/scripts/deployment/terminate.sh
          bash ${GITHUB_WORKSPACE}/scripts/deployment/terminate.sh

      - name: Deploy new service
        id: deploy-service
        env:
          BUNDLE_NAME: ${{ steps.upload-bundle.outputs.bundle_name }}
        run: |
          chmod +x ${GITHUB_WORKSPACE}/scripts/deployment/deploy.sh
          bash ${GITHUB_WORKSPACE}/scripts/deployment/deploy.sh

      - name: Promote service
        if: ${{ inputs.promote == true }}
        env:
          DEPLOYED_VERSION: ${{ steps.deploy-service.outputs.deployed_version }}
        run: |
          chmod +x ${GITHUB_WORKSPACE}/scripts/deployment/promote.sh
          bash ${GITHUB_WORKSPACE}/scripts/deployment/promote.sh